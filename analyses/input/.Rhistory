library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/git/ospree/analyses")
library(dplyr)
library(tidyr)
library(plyr)
library(ncdf4)
library(Interpol.T)
library(chillR)
# 1. Get the data
d <- read.csv("output/ospree_clean.csv")
# 2. Clean the  chilltemp column
source("chilling/cleaning_chilltemp.R")
dat<-read.csv("output/fieldchillcalcslatlong.csv")
source("chilling/totalchillcalc.R")
write.csv(dat4, "output/ospree_clean_withchill.csv", row.names=FALSE) ##
setwd("~/Documents/git/gelmanhill/ARM_Data/cd4")
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/ARM_Data/cd4")
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
View(d)
d$sqrt<-sqrt(d$CD4PCT)
plot(time, sqrt, data=d, xlab="Time", ylab="Square Root of CD4 Percentage") # 4a
d$pctsqrt<-sqrt(d$CD4PCT)
plot(time, pctsqrt, data=d, xlab="Time", ylab="Square Root of CD4 Percentage") # 4a
View(d)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$sqrt<-sqrt(d$CD4PCT)
plot(d$time, d$pctsqrt, xlab="Time", ylab="Square Root of CD4 Percentage") # 4a
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point() # 4a
library(arm)
library(lme4)
library(ggplot2)
library(dplyr)
library(tidyr)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$sqrt<-sqrt(d$CD4PCT)
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point() # 4a
plot(d$time, d$sqrt)
View(d)
cd4dat$time <- cd4dat$visage - cd4dat$baseage
d$sqrt<-sqrt(d$CD4PCT)
d$time <- d$visage - d$baseage
cd4dat$time <- cd4dat$visage - cd4dat$baseage
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point() # 4a
plot(d$time, d$sqrt)
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point(aes(col=newpid)) # 4a
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$time <- d$visage - d$baseage
d<- !is.na(d$sqrt) & !is.na(d$time)
d$sqrt<-sqrt(d$CD4PCT)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$time <- d$visage - d$baseage
d$sqrt<-sqrt(d$CD4PCT)
d<- !is.na(d$sqrt) & !is.na(d$time)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$time <- d$visage - d$baseage
d$sqrt<-sqrt(d$CD4PCT)
xx<- !is.na(d$sqrt) & !is.na(d$time)
d[xx,]
d<-d[xx,]
View(d)
View(d)
for(i in 1:length(unique(newpid))){
patient<-d[which(newpid==i),]
mod1<-lm(sqrt~time, data=patient)
abline(mod1)
}
for(i in 1:length(unique(d$newpid))){
patient<-d[which(d$newpid==i),]
mod1<-lm(sqrt~time, data=patient)
abline(mod1)
}
View(patient)
mod2 <- lmer (sqrt ~ time + (1 + time | patient))
ggplot(mod1)
ggplot(mod1) + geom_point()
ggplot((mod1), aes(x=time, y=sqrt)) + geom_point() + geom_smooth(abline(mod1))
ggplot((mod1), aes(x=time, y=sqrt)) + geom_point()
plot(mod1)
mod2 <- lmer (sqrt ~ time + (1 + time | patient))
mod2 <- lmer (d$sqrt ~ d$time + (1 | d$newpid))
plot(mod2)
display(mod2)
mod2 <- lmer (d$sqrt ~ d$time + (1 | patient))
dim(patient)
dim(patient)[1]
dim(patient)[1]<2
if(dim(patient)[1]<2)
{next
}
for(i in 1:length(unique(d$newpid))){
patient<-d[which(d$newpid==i),]
if(dim(patient)[1]<2){next}
mod1<-lm(sqrt~time, data=patient)
abline(mod1)
}
View(patient)
print(i)
mod2 <- lmer (d$sqrt ~ d$time + (1 | patient))
n<-length(d$sqrt)
person<-rep(NA,n)
for(i in 1:length(unique(d$newpid))){
patient<-d[which(d$newpid==i),]
if(dim(patient)[1]<2){next}
person[patient[i]]<-i
mod1<-lm(sqrt~time, data=person)
abline(mod1)
}
for(i in 1:length(patient))){
person[newpid==patient[i]]<-i
mod1<-lm(sqrt~time, data=person)
abline(mod1)
}
for(i in 1:length(patient))){
person[newpid==patient[i]]<-i
}
for(i in 1:length(patient)){
person[newpid==patient[i]]<-i
mod1<-lm(sqrt~time, data=person)
abline(mod1)
}
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
mod1<-lm(sqrt~time, data=person)
abline(mod1)
}
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
}
print(i)
ggplot((mod1), aes(x=time, y=sqrt)) + geom_point()
View(patient)
mod2 <- lmer (d$sqrt ~ d$time + (1 | person))
mod2 <- lmer (d$sqrt ~ d$time + (1 + time | person))
mod2 <- lmer (d$sqrt ~ d$time + (1 + d$time | person))
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
mod1<-lmer(d$sqrt~d$time, data=person)
abline(mod1)
}
plot(mod1)
plot(mod2)
mod2 <- lmer (d$sqrt ~ d$time + (1 | person))
plot(mod2)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$time <- d$visage - d$baseage
d$sqrt<-sqrt(d$CD4PCT)
d<- d[-which(is.na(d$time)),]
d<- d[-which(is.na(d$sqrt)),]
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point(aes(col=newpid))
patient<-unique(newpid)
n<-length(d$sqrt)
person<-rep(NA,n)
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
}
patient<-unique(d$newpid)
n<-length(d$sqrt)
person<-rep(NA,n)
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
}
mod <- lmer (d$sqrt ~ d$time + (1 | person))
plot(mod)
display(mod)
mod2<-lmer(d$sqrt~d$time, data=person)
mod2<-lmer(sqrt~time, data=person)
mod2<-lm(sqrt~time, data=person)
mod2<-lm(sqrt~time, data=patient)
for(i in 1:length(unique(d$newpid))){
kid<-d[which(d$newpid[i]),]
mod<-lm(sqrt~time, data=kid)
}
for(i in 1:length(unique(d$newpid))){
kid<-d[which(d$newpid==i),]
mod<-lm(sqrt~time, data=kid)
}
for(i in 1:length(unique(d$newpid))){
kid<-d[which(d$newpid==i),]
if(dim(kid)[1]<2){next}
mod<-lm(sqrt~time, data=kid)
}
plot(mod)
display(mod)
summary(mod)
patient<-unique(d$newpid)
n<-length(d$sqrt)
person<-rep(NA,n)
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
}
mod <- lmer (d$sqrt ~ d$time + (1 | person))
plot(mod)
summary(mod)
mod <- lmer (d$sqrt ~ d$time + (1 | patient))
mod2<-lm(d$sqrt~1 + d$time*patient)
mod2<-lm(d$sqrt~1 + d$time*newpid)
mod2<-lm(d$sqrt~1 + d$time*d$newpid)
summary(mod2)
tx<-d[,7]
base<-d[,9]
child<-length(unique(d$newpid))
percent<-d[,11]
mod2<-lm(percent~child + base*tx)
mod2<-lm(percent~1 + base*tx)
summary(mod2)
patient<-d[,2]
mod2<-lm(percent~patient + base*tx)
summary(mod2)
coef(mod)
mod3<-lmer(percent~1 + (1 | patient))
summary(mod3)
time<-d[,10]
time<-d[,10]
MO<- lmer(percent~time + (1 | patient))
coef(MO)
summary(M01)
MO1<- lmer(percent~time + tx + base + (1 | patient))
summary(M01)
summary(MO1)
summary(MO)
par(mfrow=c(1,2))
plot(MO)
plot(MO1)
noMO<-lm(percent~time)
display(MO)
display(MO1)
display(noMO)
plot(time, c.mod)
c.mod<-coef(mod)
plot(time, c.mod)
coef(mod)
c.mod<-coef(mod)[2:250]
plot(time, c.mod)
plot(baseage, c.mod)
base<-d[,9]
plot(base, c.mod)
plot(tx, c.mod)
c.mod<-coef(mod)[2:251]
plot(tx, c.mod)
mod <- lmer (d$sqrt ~ 1 + d$time*d$newpid))
m<- lmer(d$sqrt~d$time + (1 | person))
mod <- lmer (d$sqrt ~ 1 + d$time*d$newpid)
d$newpid<-factor(d$newpid)
mod <- lmer (d$sqrt ~ 1 + d$time*d$newpid)
rm(list=ls())
options(stringsAsFactors=FALSE)
setwd("~/Documents/git/gelmanhill/gelmanhill_stuff/ARM_Data/cd4")
d<-read.csv("allvar.csv", header=TRUE)
d$time <- d$visage - d$baseage
d$sqrt<-sqrt(d$CD4PCT)
d<- d[-which(is.na(d$time)),]
d<- d[-which(is.na(d$sqrt)),]
ggplot((d), aes(x=time, y=sqrt)) + xlab("Time") + ylab("Square Root of CD4 Percentage") +
geom_point(aes(col=newpid))
patient<-unique(d$newpid)
n<-length(d$sqrt)
person<-rep(NA,n)
for(i in 1:length(patient)){
person[d$newpid==patient[i]]<-i
}
m<- lmer(d$sqrt~d$time + (1 | person))
mod <- lmer (d$sqrt ~ 1 + d$time*person)
mod <- lm (d$sqrt ~ 1 + d$time*d$newpid)
c.mod<-coef(mod)
base<-d[,9]
plot(tx, c.mod)
tx<-d[,7]
base<-d[,9]
patient<-d[,2]
percent<-d[,11]
plot(tx, c.mod)
plot(base, c.mod)
c.mod<-coef(mod)
time<-d[,10]
m1<-lmer(percent~1 + (1 | person))
c.mod<-coef(m)
plot(base, c.mod)
c.mod<-coef(m1)
plot(base, c.mod)
c.MO<-coef(MO)
c.MO<-coef(MO)
c.MO1<-coef(MO1)
tx<-d[,7]
base<-d[,9]
patient<-d[,2]
percent<-d[,11]
mod2<-lm(percent~patient + base*tx)
summary(mod2)
coef(mod)
mod3<-lmer(percent~1 + (1 | patient))
summary(mod3)
time<-d[,10]
MO<- lmer(percent~time + (1 | patient))
c.MO<-coef(MO)
summary(MO)
MO1<- lmer(percent~time + tx + base + (1 | patient))
c.MO1<-coef(MO1)
noMO<-lm(percent~time)
c.noMO<-coef(noMO)
par(mfrow=c(1,2))
plot(base,MO)
plot(base,MO1)
c.MO1
par(mfrow=c(1,2))
plot(base,coef(MO)$newpid[,1])
plot(base,coef(MO)$newpid[,1])
par(mfrow=c(1,2))
plot(base,coef(MO)$newpid[,1])
plot(base,coef(MO1)$newpid[,1])
par(mfrow=c(1,3))
plot(base,coef(MO)$newpid[,1])
plot(base,coef(MO1)$newpid[,1])
plot(base,coef(noMO)$newpid[,1])
noMO<-lmer(percent~time)
plot(base,coef(noMO))
par(mfrow=c(1,2))
plot(time,coef(MO)$newpid[,1])
plot(time,coef(MO1)$newpid[,1])
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
setwd("~/Documents/git/freezingexperiment/analyses/input")
d<-read.csv("TX.csv", header=TRUE)
d$species<-substr(d$OLD, 0,6)
View(d)
d$site<-substr(d$OLD, 10, 11)
View(d)
d$individ<-substr(d$NEW, 9, 10)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
setwd("~/Documents/git/freezingexperiment/analyses/input")
d<-read.csv("TX.csv", header=TRUE)
d$species<-substr(d$OLD, 0,6)
d$site<-substr(d$OLD, 10, 11)
d$individ<-substr(d$NEW, 9, 10)
a<-as.data.frame(table(d$tx))
a<-as.data.frame(table(d$TX))
View(a)
site<-as.data.frame(table(d$site))
tx<-as.data.frame(table(d$TX))
site<-as.data.frame(table(d$site))
species<-as.data.frame(table(d$species))
View(site)
View(tx)
View(site)
View(species)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
setwd("~/Documents/git/freezingexperiment/analyses/input")
d<-read.csv("TX.csv", header=TRUE)
d$species<-substr(d$OLD, 0,6)
d$site<-substr(d$OLD, 10, 11)
d$individ<-substr(d$NEW, 9, 10)
tx<-as.data.frame(table(d$TX))
site<-as.data.frame(table(d$site))
species<-as.data.frame(table(d$species))
View(site)
