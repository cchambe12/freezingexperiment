#plot(raster1[[1]])
values(empty.raster)[non.nas.ids]<- num.false.spring[!is.na(num.false.spring)]
#values(empty.raster)[non.nas.dates]<- dates.fs[!is.na(dates.fs)]
#plot(empty.raster)
#dates.false.spring[[i]]<- empty.raster
num.false.spring.year[[i]]<-empty.raster
}
length(num.false.spring.year)
final.raster.preCC<-stack(unlist(num.false.spring.year))
summed.false.springs.preCC<-calc(final.raster.preCC,sum)
fs.years.pre<-calc(final.raster.preCC, function(x) {sum(ifelse(x>=1,1,0))})
writeRaster(fs.years.pre,"~/Documents/git/regionalrisk/analyses/output/fs.30.pre", bylayer=TRUE,format="GTiff")
install.packages("gdal")
library(gdal)
library(rgdal)
install.packages("gdalUtils")
library("gdalUtils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgeos", repos = "http://R-Forge.R-project.org", type = "source")
library(rgeos)
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", type="source")
library(rgdal)
install.packages('rgdal',repos="http://www.stats.ox.ac.uk/pub/RWin")
rgdal::writeRaster(fs.years.post,"~/Documents/git/regionalrisk/analyses/output/fs.postCC", bylayer=TRUE,format="GTiff")
install.packages("rgeos", type="source")
install.packages("rgeos", type = "source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(c('rgdal','rgeos'),repos="http://www.stats.ox.ac.uk/pub/RWin")
library("rgeos", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:rgeos", unload=TRUE)
install.packages("rgdal")
### Test the fake data:
df<-read.csv("~/Documents/git/freezingexperiment/analyses/output/FakeBuds2L.csv", header=TRUE)
mb<-read.csv("~/Documents/git/freezingexperiment/analyses/output/FakeBuds_apply.csv")
View(df)
View(mb)
library(rstan)
#install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
library(ggplot2)
library(shinystan)
library(bayesplot)
library(rstanarm)
# Setting working directory. Add in your own path in an if statement for your file structure
setwd("~/Documents/git/freezingexperiment/analyses/")
source('scripts/savestan.R')
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
df<-read.csv("~/Documents/git/freezingexperiment/analyses/output/FakeBuds2L.csv", header=TRUE)
mb<-read.csv("~/Documents/git/freezingexperiment/analyses/output/FakeBuds_apply.csv")
fit1<-stan_glm(dvr~tx+sp+(1|ind), data=df)
fit1<-stan_glmer(dvr~tx+sp+(1|ind), data=df)
summary(fit1)
display(fit1)
library(arm)
display(fit1)
fit1
fit2<-stan_glmer(dvr~tx+species+(1|ind), data=mb)
fit2
fit3<-stan_glmer(dvr~tx+sp+(1|ind), data=bb)
bb<-read.csv("output/birches_clean.csv", header=TRUE)
fit3<-stan_glmer(dvr~tx+sp+(1|ind), data=bb)
View(bb)
bb$tx<-ifelse(bb$tx=="A", 0, 1)
bb$sp <- as.numeric(as.factor(bb$sp))
bb$dvr <- as.numeric(bb$dvr)
bb$ind<-substr(bb$individ, 9,10)
bb$ind <- as.numeric(as.factor(bb$bud))
fit3<-stan_glmer(dvr~tx+sp+(1|ind), data=bb)
fit3
fit1;fit3
tx_means
bb$dvr<-as.numeric(bb$dvr)
hist(bb$dvr,xlab = "Duration of Vegetative Risk", main = "Actual DVRs" )
mean(bb$dvr,na.rm = TRUE) #10.65094
sd(bb$dvr,na.rm = TRUE) # 7.191461
table(bb$individ)
bpap<-subset(bb, bb$species=="BETPAP")
hist(bpap$dvr)
mean(bpap$dvr, na.rm =TRUE) #10.40449
sd(bpap$dvr, na.rm=TRUE) # 9.570693
bpop<-subset(bb, bb$species=="BETPOP")
mean(bpop$dvr, na.rm=TRUE) #10.82927
sd(bpop$dvr, na.rm=TRUE) #4.800012
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp <- 2; sp_sd<-0.3
ntx <- 2; tx_sd<-1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
tx_means
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
tx_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = tx_sd) )
sp_means <- lapply(unlist(tx_means), function(x) rnorm(ntx, mean = x, sd = sp_sd))
tx_means
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
display(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
sp <- 1; sp_sd<-0.3
tx <- 3; tx_sd<-1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
tx_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = tx_sd) )
sp_means <- lapply(unlist(tx_means), function(x) rnorm(ntx, mean = x, sd = sp_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = 1; sp_sd=0.3
tx = 3; tx_sd=1
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = 1; sp_sd=0.3
tx = 3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
tx_means <- lapply(ind_means, function(x) rnorm(tx, mean = x, sd = tx_sd) )
sp_means <- lapply(unlist(tx_means), function(x) rnorm(sp, mean = x, sd = sp_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = 1; sp_sd=0.3
tx = 3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
tx_means <- lapply(ind_means, function(x) rnorm(tx, mean = x, sd = tx_sd) )
sp_means <- lapply(unlist(tx_means), function(x) rnorm(sp, mean = x, sd = sp_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(sp_means)
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = 1; sp_sd=0.3
tx = 3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
tx_means <- lapply(ind_means, function(x) rnorm(tx, mean = x, sd = tx_sd) )
sp_means <- lapply(unlist(tx_means), function(x) rnorm(sp, mean = x, sd = sp_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(sp_means)
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = 1; sp_sd=0.3
tx = 3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(sp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(tx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(sp_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = -1; sp_sd=0.3
tx = -3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(sp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(tx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(sp_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
sp = -1; sp_sd=0.3
tx = -3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(sp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(tx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp = -1; sp_sd=0.3
ntx = -3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp = -1; sp_sd=0.3
ntx = -3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
nsp = 1; sp_sd=0.3
ntx = 3; tx_sd=1
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp = 2; sp_sd=0.3
ntx = 2; tx_sd=2
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp = 2; sp_sd=1
ntx = 2; tx_sd=5
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nrep <- 22
nind <- 7; ind_sd<-0.1
nsp = 2; sp_sd=0.1
ntx = 2; tx_sd=2
## Generate Random Y Response Data that follows studies nesting structure
rep_means <- rnorm(nrep, mean = 11, sd = 3)
ind_means <- lapply(rep_means, function(x) rnorm(nind, mean = x, sd = ind_sd))
sp_means <- lapply(ind_means, function(x) rnorm(nsp, mean = x, sd = sp_sd) )
tx_means <- lapply(unlist(sp_means), function(x) rnorm(ntx, mean = x, sd = tx_sd))
## Put Together X Predictor Matrix
ntot <-  nsp * ntx * nind * nrep
x_mat <- data.frame(buds = rep(1:(nrep), each = ntot/nrep),
species = rep(1:(nsp), each = nrep*nind*nsp),
tx =   rep( 1:(ntx), each=nsp*nind),
ind =  rep(1:(nind), each=nrep))
## Add in response for full fake dataset
x_mat <- x_mat[order(x_mat$species, x_mat$tx, x_mat$ind),]
#x_mat$dvr<-rnorm(n_pops, mean = 11, sd = 5)
x_mat$dvr <- unlist(tx_means)
fake_data <- x_mat
# now fix the levels to 0/1 (not 1/2) as R does
fake_data$tx <- as.numeric(fake_data$tx)
fake_data$tx[fake_data$tx==1] <- 0
fake_data$tx[fake_data$tx==2] <- 1
mean(fake_data$dvr)
sd(fake_data$dvr)
summary(lmer(dvr~tx+species+(1|ind), data=fake_data))
nsp = 2
nind = 7
ntx = 2
rep = 22 # within each combination of treatments.
(ntot = nsp*ntx*rep)
# Build up the data frame
sp = gl(nsp, rep, length = ntot)
tx = gl(ntx, rep*nsp, length = ntot)
(d <- data.frame(sp, tx)) # critical coding error here!
###### Set up differences for each level
spdiff = 0.5
txdiff = 3
######## SD for each treatment
spdiff.sd = 0.1
txdiff.sd = 1
mm <- model.matrix(~(sp+tx), data.frame(sp, tx))
# remove last column, chill1 x chill2, empty
#mm <- mm[,-grep("sp", colnames(mm))]
colnames(mm)
coeff <- c(1, spdiff, txdiff)
dvr <- rnorm(n = length(tx), mean = mm %*% coeff, sd = 1) # should be able to do sd = mm %*% sd.coeff as well, with a different sd for each parameter.
(fake <- data_frame(dvr, sp, tx))
# Fake data for buburst stan work #
library(dplyr)
(fake <- data_frame(dvr, sp, tx))
summary(lm(bb ~ (site+warm+photo+chill1+chill2)^2, data = fake)) # sanity check
summary(lm(dvr ~ (tx+sp)^2, data = fake)) # sanity check
baseinter = 11 # baseline intercept across all individuals
spint <- baseinter + c(1:nind)-mean(1:nind) # different intercepts by species
fake <- vector()
for(i in 1:nind){ # loop over species, as these are the random effect modeled
# Give species different difference values, drawn from normal. Could make dataframe of diffs and diff.sds, and use apply..
coeff <- c(spint[i],
rnorm(1, spdiff, spdiff.sd),
rnorm(1, txdiff, txdiff.sd)
)
dvr <- rnorm(n = length(tx), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(dvr, ind = i, sp, tx)
fake <- rbind(fake, fakex)
}
summary(lm(dvr ~ (sp+tx)^2, data = fake)) # sanity check
# now fix the levels to 0/1 (not 1/2) as R does
fake$tx <- as.numeric(fake$tx)
fake$tx[fake$tx==1] <- 0
fake$tx[fake$tx==2] <- 1
summary(lm(dvr ~ (sp+tx)^2, data = fake)) # double sanity check
write.csv(fake, file="~/Documents/git/freezingexperiment/analyses/output/FakeBuds2L.csv", row.names = FALSE)
mean(fake$dvr)
library(rstan)
#install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
library(ggplot2)
library(shinystan)
library(bayesplot)
library(rstanarm)
library(arm)
df<-read.csv("output/FakeBuds2L.csv", header=TRUE)
fit1<-stan_glmer(dvr~tx+sp+(1|ind), data=df)
fit1
fit3<-stan_glmer(dvr~tx+sp+(1|ind), data=bb)
fit3
write.csv(fake_data, file="~/Documents/git/freezingexperiment/analyses/output/FakeBuds_apply.csv", row.names = FALSE)
mb<-read.csv("output/FakeBuds_apply.csv", header=TRUE)
fit2<-stan_glmer(dvr~tx+species+(1|ind), data=mb)
fit2
