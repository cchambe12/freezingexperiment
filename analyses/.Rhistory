mydata <- read.csv("fish.species.csv" , header=TRUE)
attach(mydata)
install.packages("swirl")
library("swirl")
swirl()
library(vegan)
install.packages("swirl")
swirl()
library(swirl)
swirl()
?picante
help(picante)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
# Install Packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("ggplot2", "plyr", "dplyr", "tidyr", "tidytext",
"purrr", "Hmisc", "lme4","rstan","shinystan","picante")
ipak(packages)
?fixef
?ranef
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("rstan, type="source")
install.packages("rstan, type= "source")
install.packages("rstan", type= "source")
rm(list=ls()) # remove everything currently held in the R memory
graphics.off()
rstan:::rstudio_stanc("Documents/Temporal Ecology/Stanleyi/nesting_ex.stan")
install.LaTeX2RTF(page_with_download_url = "http://sourceforge.net/projects/latex2rtf/", ...)
install.packages("LaTeX2RTF")
library(LaTeX2RTF)
install.LaTeX2RTF
install.LaTeX2RTF()
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores())
```
### Load and look at the data
```{r linear-regression-data}
load("kidiq.rda")
head(kidiq)
```
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```{r plot1}
```{r plot1}
library("rstan")
library("ggplot2")
install_packages("bayesplot")
install_package("bayesplot")
install.packages("bayesplot")
install.packages("bayesplot")
install.packages("rstanarm")
install.packages("rstanarm")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("ggplot2")
install.packages("ggplot2")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
install.packages("rstan")
install.packages("rstan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
```{r plot2}
mod1 <- stan_model("linear-regression.stan")
mod1 <- stan("linear-regression.stan")
mod1 <- stan_model("~/Downloads/linear-regression.stan")
mod1 <- stan("~/Downloads/linear-regression.stan")
mod1 <- stan_model("~/Documents/linear-regression.stan")
mod1 <- stan("~/Documents/linear-regression.stan")
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
```{r plot1}
theme_set(bayesplot::theme_default())
p <- ggplot(kidiq,
aes(
x = mom_iq,
y = kid_score,
color = mom_hs == 1
))
p1 <- p +
geom_point(size = 2.5, color = "#DCBCBC") +
geom_smooth(method = "lm", se = FALSE, color = "#7C0000")
p1
```
library("bayesplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("acepack", "ape", "broom", "car", "chillR", "chron", "class", "cluster", "coda", "codetools", "colorspace", "corrplot", "crayon", "curl", "data.table", "date", "DBI", "dfoptim", "digest", "evaluate", "foreign", "gamm4", "ghit", "git2r", "githubinstall", "gtable", "Hmisc", "httr", "janeaustenr", "jsonlite", "knitr", "lattice", "latticeExtra", "manipulate", "maptools", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "mime", "mnormt", "munsell", "nlme", "nnet", "numDeriv", "openssl", "optextras", "packrat", "pbapply", "permute", "proto", "psych", "quantreg", "R6", "Rcpp", "RcppEigen", "RefManageR", "reshape2", "rmarkdown", "rsconnect", "shiny", "shinyjs", "shinythemes", "SparseM", "spatial", "stringi", "survival", "tibble", "tidyr", "tidytext", "tokenizers", "ucminf", "vegan", "XML", "yaml", "zoo"))
---
title: "Linear regression in Stan"
author: ""
date: ""
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
```
```{r load-packages, message=FALSE, warning=FALSE}
library("rstan")
library("ggplot2")
library("bayesplot")
```
```{r rstan-options}
options(mc.cores = parallel::detectCores()) # more cores, can cause crash
```
### Load and look at the data
```{r linear-regression-data}
load("/Users/CatherineChamberlain/Downloads/linear-regression/kidiq.rda")
head(kidiq)
```
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
library(car)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/bbch_data.csv", header=TRUE, check.names=FALSE)
# Organizing data
df<-gather(d, "date","bbch", -NEW, -TX)
df<-na.omit(df)
df$date<-as.character(as.Date(df$date,"%m/%d/%y"))
df$doy<-yday(df$date)
df$species<-substr(df$NEW, 0,6)
df<-dplyr::select(df, -date)
# Now start evaluating duration of vegetative risk
# 9 is using 9 as budburst, 10 is using 10. Some individuals, I missed 9 so it
# was sometime in between the observation dates
phases.9<-c("9","15")
df9<-filter(df, bbch %in% phases.9)
df9$bbch<- factor(df9$bbch, levels = c(9,15),
labels = c("Budburst","Leaves"))
code<-unite_(df9, "species_TX", c("species","TX"))
df9<-full_join(df9, code)
risk9<- df9%>%
group_by(NEW, bbch, species_TX)%>%
arrange(NEW)%>%
filter(row_number()==1) %>%
spread(bbch, doy)
risk9<-na.omit(risk9)
risk9$Risk <- risk9$Leaves - risk9$Budburst
# Some graphs
ggplot(risk9, aes(x=species, y=Risk)) + geom_point(aes(col=as.factor(TX))) +
geom_smooth(aes(col=as.factor(TX)),method="loess", se=FALSE)
ggplot((risk9), aes(x=Budburst, y=NEW), stat="identity") + geom_point(aes(x= risk9$Budburst)) +
geom_segment(aes(y = NEW, yend = NEW, x = Budburst, xend = Leaves, col=TX)) +
geom_point(aes(x=Leaves, col=TX)) + geom_point(aes(col=TX)) +
xlab("Budburst to Leaf Out") +
ylab("Species")
# Means and Standard deviations
risk<-risk9%>%
ungroup(NEW, Risk)%>%
dplyr::select(species_TX, Risk)
risk.mean<- risk%>%
group_by(species_TX) %>%
summarise_each(funs(mean))%>%
rename(mean=Risk)
risk.sd<-risk%>%
group_by(species_TX) %>%
summarise_each(funs(sd)) %>%
rename(sd=Risk)
risk.count<-as.data.frame(table(risk$species_TX)) %>%
rename(species_TX=Var1)%>%
rename(count=Freq)
risk.species<-full_join(risk.mean, risk.sd)
risk.species.tx<-full_join(risk.species,risk.count)
tx.count<-as.data.frame(table(risk9$TX))%>%
rename(TX=Var1)%>%
rename(count=Freq)
tx<-risk9%>%
ungroup(NEW, Risk)%>%
dplyr::select(TX, Risk)
tx.mean<- tx%>%
group_by(TX) %>%
summarise_each(funs(mean))%>%
rename(mean=Risk)
tx.sd<-tx%>%
group_by(TX) %>%
summarise_each(funs(sd)) %>%
rename(sd=Risk)
tx.species<-full_join(tx.mean, tx.sd)
tx.species.count<-full_join(tx.species,tx.count)
#write.csv(tx.species.count, "output/tx_count.csv", row.names = FALSE)
mod<-lm(Risk~TX, data=risk9)
lmer<-lmer(Risk~TX + (1|species),data=risk9)
display(mod);display(lmer)
ggplot((risk9), aes(x=Budburst, y=Risk)) + xlab("Budburst") + ylab("Duration of Vegetative Risk") +
geom_point(aes(col=as.factor(TX))) +
geom_smooth(aes(col=as.factor(TX)),method="lm", se=FALSE)
qplot(species, Risk, data = risk9,
geom = "boxplot", color=TX) +
xlab("Species")+ylab("Duration of Vegetative Risk")
# Anova
model<-lm(Risk~TX+Budburst+species,data=risk9)
Anova(model)
# ALNINC
alninc<-risk9 %>% filter(species=="ALNINC")
aln.mod<-lm(Risk~TX,data=alninc)
Anova(aln.mod)
# BETPOP
betpop<-risk9 %>% filter(species=="BETPOP")
bet.mod<-lm(Risk~TX,data=betpop)
Anova(bet.mod)
# PRUPEN
prupen<-risk9 %>% filter(species=="PRUPEN")
pru.mod<-lm(Risk~TX,data=prupen)
Anova(pru.mod)
# VIBCAS
vibcas<-risk9 %>% filter(species=="VIBCAS")
vib.mod<-lm(Risk~TX,data=vibcas)
Anova(vib.mod)
