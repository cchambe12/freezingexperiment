View(error.inds)
error.inds<-error.inds[!duplicated(error.inds),]
View(error.inds)
error.inds<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
View(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
View(error.inds)
error.inds<-filter(error.inds, Freq==2)
View(error.inds)
rm.inds<-unique(error.inds$Var1)
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
keep
keep<-as.list(unique(error.inds$Var1))
keep
keep<-list(unique(error.inds$Var1))
keep
View(error.inds)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_Sheet.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
dx<-filter(dx, NEW %in% keep)
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
View(dx)
dx$date<-yday(dx$doy)
dx$date<-as.Date(strftime(dx$doy, format="%j"))
class(dx$doy)
dx$doy<-as.Date(dx.doy)
dx$doy<-as.Date(dx$doy)
class(dx$doy)<-as.Date
dx$date<-as.Date(strptime(dx$doy, format="%j"))
View(dx)
dx$date<-as.Date(strptime(dx$doy))
dx$date<-as.Date(strptime(dx$doy, format="%d-%m-%Y"))
View(dx)
dx$date<-as.Date(strptime(dx$doy, format="%d-%m-%y"))
class(dx$doy)<-as.Date
dx$doy<-as.Date(dx$doy)
dx$date<-as.Date(strptime(dx$doy, format="%d-%M-%y"))
dx$date<-as.Date(strftime(dx$doy, format="%d-%M-%y"))
dx$date<-as.Date(strftime(dx$doy, format="%d-%m-%y"))
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_Sheet.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
## Clean dataframe for analysis
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
class(dx$doy)
class(dx$doy)<- as.Date
View(dx)
dx$doy<-as.Date(dx$doy)
View(dx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_Sheet.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
## Clean dataframe for analysis
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 0, 2)
dx$month<-substr(dx$doy, 4, 5)
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 1, 2)
dx$month<-substr(dx$doy, 4, 5)
dx$year<-substr(dx$doy, 7,10)
View(dx)
x<-paste(dx$year, dx$day)
dx$date<-as.Date(strptime(x, format="%Y %j"))
View(dx)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
View(dx)
sort(unique(dx$doy))
start<-yday(2017/03/24)
start<-yday("2017/03/24")
dx$doy.adjusted<-dx$doy-start
dx$Bud<-as.numeric(dx$Bud)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_Sheet.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)%>%filter(TX=="B")
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
## Clean dataframe for analysis
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 1, 2)
dx$month<-substr(dx$doy, 4, 5)
dx$year<-substr(dx$doy, 7,10)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
### DOY should now be adjusted for start of experiment rather than actual calendar doy
# Start of Experiment was: 24 March 2017
start<-yday("2017/03/24")
dx$doy.adjusted<-dx$doy-start
dxx<-ddply(dx, c("NEW"), summarise, bud = count(Bud))
library(plyr)
dxx<-ddply(dx, c("NEW"), summarise, bud = count(Bud))
View(error.inds)
View(dx)
dxx<-ddply(dx, c("NEW", "date"), summarise, bud = count(Bud))
dx$bud<-count(dx$Bud)
dx$bud<-count(dx$Bud, by="NEW")
dx$bud<-count(dx, c("Bud", "NEW"))
dx$bud<-count(dx, c("NEW", "Bud"))
dx$bud<-count(dx, c("NEW", "Bud", "date"))
dx$bud<-dx[count(dx, c("NEW", "Bud", "date"))]
dx$bud<-dx$Bud[count(dx, c("NEW", "Bud", "date"))]
dx$bud <- ave(dx$NEW, dx$date, FUN = seq_along)
View(dx)
dx$bud <- ave(dx$date, dx$NEW, FUN = seq_along)
dx$bud <- ave(dx$Bud, dx$NEW, FUN = seq_along)
dx$bud <- ave(dx$Bud, c(dx$NEW, dx$date), FUN = seq_along)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_Sheet.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
## Clean dataframe for analysis
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 1, 2)
dx$month<-substr(dx$doy, 4, 5)
dx$year<-substr(dx$doy, 7,10)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
### DOY should now be adjusted for start of experiment rather than actual calendar doy
# Start of Experiment was: 24 March 2017
start<-yday("2017/03/24")
dx$doy.adjusted<-dx$doy-start
dx$bud <- ave(dx$Bud, dx$NEW, dx$date, FUN = seq_along)
error.inds<-d%>%dplyr::select(NEW,TX,Freeze)
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
View(error.inds)
error.inds<-d%>%dplyr::select(NEW,Freeze)
error.inds<-error.inds[!duplicated(error.inds),]
error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq==1)
keep<-unique(error.inds$Var1)
error.inds<-d%>%dplyr::select(NEW,Freeze)
error.inds<-error.inds[!duplicated(error.inds),]
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq!=3)
keep<-unique(error.inds$Var1)
View(error.inds)
keep
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 1, 2)
dx$month<-substr(dx$doy, 4, 5)
dx$year<-substr(dx$doy, 7,10)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
### DOY should now be adjusted for start of experiment rather than actual calendar doy
# Start of Experiment was: 24 March 2017
start<-yday("2017/03/24")
dx$doy.adjusted<-dx$doy-start
dx$bud <- ave(dx$Bud, dx$NEW, dx$date, FUN = seq_along)
bud<-dx%>%group_by(NEW, bud)%>%summarize(start=first(bbch))
View(bud)
dx$LO<-ifelse(dx$bbch==15, dx$doy.adjusted, NA)
View(dx)
dx$LO<-dx$doy.adjusted[which(dx$bbch==15)]
dx$LO<-NA
for(i in unique(dx$NEW)){
dx$LO<-dx$doy.adjusted[which(dx$bbch==15)]
}
for(i in c(1:nrow(dx))){
for(j in unique(dx$NEW)){
dx$LO[i]<-dx$doy.adjusted[j][which(dx$bbch==15),]
}
}
for(i in c(1:nrow(dx))){
for(j in unique(dx$NEW)){
dx$LO[i]<-dx$doy.adjusted[j][which(dx$bbch==15)]
}
}
buds<-subset(dx, bbch==15)
View(buds)
buds<-buds%>%group_by(NEW, bud)%>%summarize(bb=first(doy))
buds<-subset(dx, bbch==15)
buds<-buds%>%group_by(NEW, bud, doy)%>%summarize(bb=first(doy.adjusted))
buds<-subset(dx, bbch==15)
buds<-buds%>%group_by(NEW, bud, doy)%>%summarise_each(bb=first(doy.adjusted))
buds<-dplyr::select(NEW, bud, doy.adjusted)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(NEW, bud, doy.adjusted)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds<-buds%>%group_by(NEW, bud) %>%summarize(bb=first(doy.adjusted))
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds$bb<-buds[min(doy.adjusted,id),]
buds$bb<-buds[min(buds$doy.adjusted,buds$id),]
class(buds$doy.adjusted)
buds$bb<-buds[min(doy.adjusted,id),]
buds<-by(buds, buds$id, function(x) x[which.min(x$doy.adjusted), ] )
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds$bb<-buds[which(min(doy.adjusted,id)),]
buds$bb<-buds[which(min(buds$doy.adjusted,buds$id)),]
buds$bb<-buds[min(buds$doy.adjusted,buds$id),]
buds$bb<-buds[min(buds$id, buds$doy.adjusted),]
buds$bb<-buds[first(buds$doy.adjusted, buds$id),]
buds$bb<-aggregate(doy.adjusted ~ id, data = buds, min)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
View(buds)
buds$ind<-substr(buds$id, 1, 10)
buds$burst <- ave(
buds$ind
FUN=function(x) cumsum(c(0, head(x, -1)))
)
buds$burst <- ave(
buds$ind,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
buds$burst <- ave(
buds$id, buds$ind,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$ind<-substr(buds$id, 1, 10)
buds$burst <- ave(
buds$id, buds$ind,
FUN=function(x) cumsum(c(0, head(x, -1)))
)
warnings()
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$ind<-substr(buds$id, 1, 10)
buds<-buds %>% distinct(id,ind) %>%
count(ind)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-buds %>% distinct(id,individ) %>%
count(individ)
buds<-buds %>% dplyr::distinct(id,individ) %>%
count(individ)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-distinct(buds, id,individ)
buds$total<-count(buds, individ)
buds$total<-count(buds$individ)
buds$total<-buds[count(buds$individ),]
total<-count(buds$individ)
View(total)
all<-dplyr::select(dx, NEW, bud)
all<-distinct(all, NEW, bud)
total<-count(all$bud)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-distinct(buds, id,individ)
burst<-count(buds$individ)
all<-dplyr::select(dx, NEW, bud)
all<-distinct(all, NEW, bud)
total<-count(all$bud)
all<-dplyr::select(dx, NEW, bud)
View(all)
all$last<-all[max(bud, NEW),]
all$last<-all[max(all$bud, all$NEW),]
all<-all[max(all$bud, all$NEW),]
all<-dplyr::select(dx, NEW, bud)
all$last<-all[last(bud, NEW),]
all<-all%>%group_by(NEW)%>%summarize(count=last(bud))
all<-aggregate(all$bud, by = list(all$NEW), max)
all<-dplyr::select(dx, NEW, bud)
all<-aggregate(all$bud, by = list(all$NEW), max)
View(all)
all<-dplyr::select(dx, NEW, bud)
class(all$bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW), max)
total<-count(all$bud)
all<-dplyr::select(dx, NEW, bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW), max)
View(all)
all<-all%>%rename(Group.1=ID)%>%rename(x=total)
all<-all%>%rename(ID=Group.1)%>%rename(total=x)
all<-all%>%rename(ID==Group.1)%>%rename(total==x)
all<-all%>%rename(ID=Group.1)%>%rename(total=x)
all<-all%>%rename(id=Group.1)%>%rename(total=x)
all<-all%>%rename(id="Group.1")%>%rename(total=x)
detach("package:plyr", unload=TRUE)
all<-all%>%rename(id=Group.1)%>%rename(total=x)
View(all)
burst<-burst%>%rename(id=Group.1)%>%rename(burst=x)
View(burst)
burst<-burst%>%rename(id=x)%>%rename(burst=Freq)
burst<-burst%>%rename(id=x)%>%rename(burst=freq)
perc<-full_join(burst, all)
View(perc)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, TX, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-distinct(buds, id,individ)
burst<-count(buds$individ)
burst<-burst%>%rename(id=x)%>%rename(burst=freq)
all<-dplyr::select(dx, NEW, TX, bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW), max)
all<-all%>%rename(id=Group.1)%>%rename(total=x)
perc<-full_join(burst, all)
View(perc)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, TX, bud)
buds<-aggregate(buds$bud, by = list(buds$NEW, buds$TX), min)
View(buds)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud)
buds<-aggregate(buds$bud, by = list(buds$NEW, buds$TX), min)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, TX, bud)
buds<-aggregate(buds$bud, by = list(buds$NEW), min)
View(buds)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, TX, bud, doy.adjusted)
buds<-aggregate(buds$doy.adjusted, by = list(buds$NEW, buds$TX), min)
View(buds)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, TX, bud, doy.adjusted)
buds<-aggregate(buds$bud, by = list(buds$NEW, buds$TX, buds$doy.adjusted), min)
View(buds)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-distinct(buds, id,individ)
burst<-count(buds$individ)
View(buds)
burst<-count(buds$individ)
burst<-as.data.frame(table(buds$individ))
View(burst)
burst<-burst%>%rename(id=Var1)%>%rename(burst=Freq)
all<-dplyr::select(dx, NEW, TX, bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW, all$TX), max)
all<-all%>%rename(id=Group.1)%>%rename(total=x)
test<-dplyr::select(dx, NEW, bud)
test$bud<-as.numeric(test$bud)
test<-aggregate(test$bud, by = list(test$NEW), max)
test<-test%>%rename(id=Group.1)%>%rename(total=x)
View(test)
View(test)
all<-all%>%rename(id=Group.1)%>%rename(total=x) %>%rename(tx=Group.2)
all<-dplyr::select(dx, NEW, TX, bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW, all$TX), max)
all<-all%>%rename(id=Group.1)%>%rename(total=x) %>%rename(tx=Group.2)
perc<-full_join(burst, all)
class(burst$id)
burst$id<-as.character(burst$id)
buds<-subset(dx, bbch==15)
buds<-dplyr::select(buds, NEW, bud, doy.adjusted)
buds$id<-paste(buds$NEW, buds$bud)
buds<-aggregate(doy.adjusted ~ id, data = buds, min)
buds$individ<-substr(buds$id, 1, 10)
buds<-distinct(buds, id,individ)
burst<-as.data.frame(table(buds$individ))
burst<-burst%>%rename(id=Var1)%>%rename(burst=Freq)
burst$id<-as.character(burst$id)
all<-dplyr::select(dx, NEW, TX, bud)
all$bud<-as.numeric(all$bud)
all<-aggregate(all$bud, by = list(all$NEW, all$TX), max)
all<-all%>%rename(id=Group.1)%>%rename(total=x) %>%rename(tx=Group.2)
perc<-full_join(burst, all)
perc$percent.bb<-perc$burst/perc$total
perc$species<-substr(perc$id, 1,6)
mod<-lmer(percent.bb~tx+(1|species))
mod<-lmer(percent.bb~tx+(1|species), data=perc)
display(mod)
mod<-lm(percent.bb~tx, data=perc)
display(mod)
mod<-lm(percent.bb~tx + species, data=perc)
display(mod)
ggplot(perc, aes(x=species, y=perc)) + geom_point()
ggplot(perc, aes(x=species, y=perc)) + geom_point(aes(color=tx))
qplot(species, percent.bb, data = perc,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Percent Budburst")
View(dx)
