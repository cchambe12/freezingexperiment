ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 5, ile$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2)
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.2, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, color="red")
ilemuc
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
ilemuc
doy<- 75:150
ile<-data.frame(doy, phase=NA, risk=NA)
ile$phase<-ifelse(ile$doy==95, "BB", ile$phase)
ile$phase<-ifelse(ile$doy==100, "LO", ile$phase)
ile$risk<-ifelse(ile$doy>=96 & ile$doy<=99, 10, ile$risk)
ile$risk<-ifelse(ile$doy==95, 6.5, ile$risk)
ile$risk<-ifelse(ile$doy==100, 7.5, ile$risk)
ile$risk<-ifelse(ile$doy>=75 & ile$doy<=94, 3, ile$risk)
ile$risk<-ifelse(ile$doy>=101, 4, ile$risk)
bet<-data.frame(doy, phase=NA, risk=NA)
bet$phase<-ifelse(bet$doy==122, "BB", bet$phase)
bet$phase<-ifelse(bet$doy==142, "LO", bet$phase)
bet$risk<-ifelse(bet$doy>=124 & bet$doy<=140, 10, bet$risk)
bet$risk<-ifelse(bet$doy==123, 6.5, bet$risk)
bet$risk<-ifelse(bet$doy==141, 7.5, bet$risk)
bet$risk<-ifelse(bet$doy>=75 & bet$doy<=122, 3, bet$risk)
bet$risk<-ifelse(bet$doy>=142, 4, bet$risk)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 25, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140:150, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "ILEMUC")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "BETALL")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 135, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 137, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
ilemuc<-ggplot(ile, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Ilex mucronata")
betall<-ggplot(bet, aes(x=doy, y=risk)) + geom_line() + coord_cartesian(ylim=0:20) +
annotate("rect", xmin=82, xmax=97, ymin=1, ymax=6, alpha=0.1, color="red") +
xlab("Day of Year") + ylab("Frost Damage Risk") +
annotate("text", x = 140, y = 18, label = "Betula alleghaniensis")
grid.arrange(ilemuc, betall, ncol=1, nrow=2)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
library(gridExtra)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/Buds_clean.csv", header=TRUE, check.names=FALSE)
################ Cleaning data ##################################
# remove individuals that were frosted twice
error.inds<-d%>%dplyr::select(NEW,Freeze)
error.inds<-error.inds[!duplicated(error.inds),]
#error.inds$Freeze<-ifelse(error.inds$Freeze=="", NA, error.inds$Freeze)
#error.inds<-na.omit(error.inds)
error.inds<-as.data.frame(table(error.inds$NEW))
error.inds<-filter(error.inds, Freq!=3)
keep<-unique(error.inds$Var1)
## Clean dataframe for analysis
dx<-gather(d, key=doy, value=bbch, -NEW, -TX, -Freeze, -Bud)
dx<-filter(dx, NEW %in% keep)
dx$day<-substr(dx$doy, 1, 2)
dx$month<-substr(dx$doy, 4, 5)
dx$year<-substr(dx$doy, 7,10)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
### DOY should now be adjusted for start of experiment rather than actual calendar doy
# Start of Experiment was: 24 March 2017
start<-yday("2017/03/24")
dx$doy.adjusted<-dx$doy-start
dx$bud <- ave(dx$Bud, dx$NEW, dx$date, FUN = seq_along)
# Quick check...
dvr<-dx[!is.na(dx$bbch),]
done<-c("DONE!", "DONE", "DONE!!", "missed","(missed)", "")
dvr<-dvr[!dvr$bbch%in%done,]
dead<-c("stem snapped", "x", "dead")
dvr$bbch<-ifelse(dvr$bbch%in%dead, 0, dvr$bbch)
dvr$bud<-as.numeric(dvr$bud)
dvr$ID<-paste(dvr$NEW, dvr$bud, sep="_")
dvr<-dvr%>%dplyr::select(ID, doy.adjusted, bbch)
last<-aggregate(dvr$doy.adjusted, by = list(dvr$ID), max)
last<-last%>%rename(ID=Group.1)%>%rename(doy.adjusted=x)
last$leaf<-NA
for(i in c(1:nrow(last))) {
for(j in c(1:nrow(dvr)))
if(last$ID[i]==dvr$ID[j] & last$doy.adjusted[i]==dvr$doy.adjusted[j])
last$leaf[i]<-dvr$bbch[j]
}
first<-aggregate(dvr$doy.adjusted, by = list(dvr$ID), min)
first<-first%>%rename(ID=Group.1)%>%rename(doy.adjusted=x)
first$bb<-NA
for(i in c(1:nrow(first))) {
for(j in c(1:nrow(dvr)))
if(first$ID[i]==dvr$ID[j] & first$doy.adjusted[i]==dvr$doy.adjusted[j])
first$bb[i]<-dvr$bbch[j]
}
############## Determine Duration of Vegetative Risk #################
##### Need to clean data a lot - remove early incorrectly entered data
## and edit errors from when I was away
## then determine dead buds and if any reached budburst and then died
## If so to above, need to recalculate percent budburst
first<-first%>%rename(budburst=doy.adjusted)%>%rename(bbch.first=bb)
last<-last%>%rename(leafout=doy.adjusted)%>%rename(bbch.last=leaf)
risk<-full_join(first, last)
risk$species<-substr(risk$ID, 1,6)
risk$individ<-substr(risk$ID, 1, 10)
risk$bud<-substr(risk$ID, 12, 13)
###### Now integrate FS ###########
frz<-subset(dx,TX=="B")
frz<-dplyr::select(frz, NEW, Freeze, bud)
frz$day<-substr(frz$Freeze, 1, 2)
frz$month<-substr(frz$Freeze, 4, 5)
frz$year<-substr(frz$Freeze, 7,10)
x<-paste(frz$year, frz$day, frz$month)
frz$date<-as.Date(strptime(x, format="%Y %d %m"))
frz$frz<-yday(frz$date)
frz<-dplyr::select(frz, NEW, frz)
frz<-na.omit(frz)
frz<-frz[!duplicated(frz),]
risk$frz<-NA
for(i in c(1:nrow(risk))) {
for(j in c(1:nrow(frz)))
if(risk$individ[i]==frz$NEW[j])
risk$frz[i]<-frz$frz[j]
}
risk$frz<- risk$frz-start
risk$tx<-ifelse(is.na(risk$frz), "A", "B")
risk$dvr<-ifelse(risk$bbch.last==15, (risk$leafout-risk$budburst), NA)
risk$frost<-ifelse(risk$bbch.first<=risk$frz, 1, 0)
risk$frost<-ifelse(risk$tx=="A", 0, risk$frost)
risk$bud<-as.numeric(risk$bud)
View(risk)
table(risk$species, risk$individ)
table(risk$species)
table(risk$individ)
table(risk$bud)
hist(risk$bud)
goo<-aggregate(risk$bud, by = list(risk$individ), max)
goo
hist(goo$x)
range(goo$x)
mod1<-lmer(dvr~tx+(1|species), data=risk)
display(mod1)
mod4<-lmer(dvr~tx + (1|species), data=birch)
betula<-c("BETPOP", "BETPAP")
birch<-subset(risk, risk$species%in%betula)
mod4<-lmer(dvr~tx + (1|species), data=birch)
display(mod4)
bpap<-ggplot(birch, aes(x=bud, y=dvr, color=tx)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~species)
bpap
bpap<-ggplot(birch, aes(x=individ, y=dvr, color=tx)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~species)
bpap
bpap<-ggplot(birch, aes(x=as.factor(birch$individ), y=dvr, color=tx)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~species)
bpap
bpap<-ggplot(birch, aes(x=bud, y=dvr, color=tx)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~species)
bpap
mod4<-lmer(dvr~bud + frost + (1|species), data=birch)
display(mod4)
View(birch)
birch$c_dvr<-birch$dvr - mean(birch$dvr)
hist(birch$bud)
birch$c_bud<-birch$bud - mean(birch$bud)
hist(birch$c_bud)
birch$z_bud<-(birch$bud - mean(birch$bud))/sd(birch$bud)
hist(birch$z_bud)
birch$bud
class(birch$bud)
birch$frz
birch$tx
View(birch)
lmod1<-lmer(dvr~tx+bud+(1|species), data=birch)
display(lmod1)
qplot(species, dvr, data = birch,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Mean DVR")
bpap<-ggplot(birch, aes(x=bud, y=dvr, color=tx)) + geom_point() + geom_smooth(method="lm") + facet_wrap(~species)
bpap
lm(dvr~tx+bud+species, data=birch)
display(simp)
simp<-lm(dvr~tx+bud+species, data=birch)
display(simp)
simp<-lm(dvr~tx+bud, data=birch)
display(simp)
simp<-lm(dvr~frost+bud+species, data=birch)
display(simp)
simp<-lm(dvr~frost+bud+species+frost:bud, data=birch)
display(simp)
burst<-risk[!is.na(risk$dvr),]
burst<-distinct(burst, ID,individ)
burst<-as.data.frame(table(burst$individ))
burst<-burst%>%rename(individ=Var1)%>%rename(burst=Freq)
burst$individ<-as.character(burst$individ)
total<-risk
total<-distinct(total, ID,individ)
total<-as.data.frame(table(total$individ))
total<-total%>%rename(individ=Var1)%>%rename(total=Freq)
total$individ<-as.character(total$individ)
percent<-full_join(total, burst)
percent$perc.bb<-percent$burst/percent$total
percent$species<-substr(percent$individ, 1,6)
percent$tx<-NA
percent$tx<-as.character(percent$tx)
for(i in c(1:nrow(percent))){
for(j in c(1:nrow(risk)))
if(percent$individ[i]==risk$individ[j])
percent$tx[i]<-risk$tx[j]
}
percent$species<-substr(percent$individ, 1, 6)
mod<-lm(perc.bb~tx + species, data=percent)
display(mod)
percent<-subset(percent, species %in% betula)
mod<-lm(perc.bb~tx + species, data=percent)
display(mod)
qplot(species, perc.bb, data = percent,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Percent Budburst")
birch.mean<-birch[!is.na(birch$dvr),]
birch.mean$avg.rate<-ave(birch.mean$dvr, birch.mean$individ)
hist(birch.mean$avg.rate)
M1<-lm(avg.rate~tx+species, data=birch.mean)
display(M1)
qplot(species, dvr, data = birch,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Mean DVR")
M1<-lmer(avg.rate~tx+(1|species), data=birch.mean)
display(M1)
mod<-lm(perc.bb~tx + (1|species), data=percent)
mod<-lmer(perc.bb~tx + (1|species), data=percent)
display(mod)
percent$perc.bb<-(percent$burst/percent$total)*100
mod<-lmer(perc.bb~tx + (1|species), data=percent)
display(mod)
mod<-lm(perc.bb~tx, data=percent)
display(mod)
mod<-lm(perc.bb~tx+species, data=percent)
display(mod)
qplot(species, perc.bb, data = percent,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Percent Budburst")
percent<-full_join(total, burst)
percent$perc.bb<-(percent$burst/percent$total)*100
percent$species<-substr(percent$individ, 1,6)
percent$tx<-NA
percent$tx<-as.character(percent$tx)
for(i in c(1:nrow(percent))){
for(j in c(1:nrow(risk)))
if(percent$individ[i]==risk$individ[j])
percent$tx[i]<-risk$tx[j]
}
percent$species<-substr(percent$individ, 1, 6)
mod<-lm(perc.bb~tx+species, data=percent)
display(mod)
qplot(species, perc.bb, data = percent,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Percent Budburst")
percent<-subset(percent, species %in% betula)
mod<-lm(perc.bb~tx+species, data=percent)
display(mod)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
library(lme4)
library(arm)
# Set Working Directory
setwd("~/Documents/git/freezingexperiment/analyses")
d <-read.csv("input/buds_traits.csv", header=TRUE)
bb<-read.csv("output/birches_buddata.csv", header=TRUE)
area<-read.csv("input/SLA_buds.csv", header=TRUE)
wt<-read.csv("input/SLA_weight.csv", header=TRUE)
## Start working on columns
dx<-dplyr::select(d, NEW, TX, Bud, Chlorophyll)
dx$bud <- ave(dx$Bud, dx$NEW, FUN = seq_along)
dx$species<-substr(dx$NEW, 1, 6)
dx<-filter(dx, species !="SAMRAC")
dx<-dx[!is.na(dx$Chlorophyll),]
dx$ID<-paste(dx$NEW, dx$bud, sep="_")
bb$chlorophyll<-NA
for(i in c(1:nrow(bb))){
for(j in c(1:nrow(dx)))
if(bb$ID[i]==dx$ID[j])
bb$chlorophyll[i]<-dx$Chlorophyll[j]
}
chl.mod<-lm(chlorophyll~frost+bud+species+frost*bud, data=bb)
display(chl.mod)
qplot(species, chlorophyll, data = bb,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Chlorophyll")
ggplot(bb, aes(x=bud, y=chlorophyll, color=as.factor(frost))) + geom_point() + geom_smooth(method="lm")
dx$frz<-ifelse(dx$TX=="A", 0, 1)
dx<-na.omit(dx)
dx$spp<-substr(dx$NEW, 0,6)
sp.mean<-aggregate(Chlorophyll~NEW + frz, dx, mean)
sp.mean$species<-substr(sp.mean$NEW, 0, 6)
qplot(spp, Chlorophyll, data = dx,
geom = "boxplot", color=TX) +
xlab("Species")+ylab("Chlorophyll measurement")
mod<-lmer(Chlorophyll~frz + (1|spp), data=dx)
summary(mod)
hist(dx$Chlorophyll[dx$frz==0])
hist(dx$Chlorophyll[dx$frz==1])
hist(bb$chlorophyll[bb$frost==0])
hist(bb$chlorophyll[bb$frost==1])
#write.csv(bb, file=("~/Documents/git/freezingexperiment/analyses/output/buds_traits.csv"), row.names=FALSE)
bb.chl<-bb[!is.na(bb$chlorophyll),]
table(bb.chl$individ)
area$ID<-paste(area$ID, area$number, sep=".")
area$dry<-NA
for(i in c(1:nrow(area))){
for(j in c(1:nrow(wt)))
if(area$ID[i]==wt$ID[j])
area$dry[i]<-wt$dry[j]
}
area$sla<-area$Area/area$dry
area$ID<-substr(area$ID, 1, 10)
area$sla <- ave(area$sla, area$ID)
area<-dplyr::select(area, ID, sla)
area<-area[!duplicated(area),]
bb<-read.csv("output/buds_traits.csv", header=TRUE)
bb$sla<-NA
for(i in c(1:nrow(bb))){
for(j in c(1:nrow(area)))
if(bb$individ[i]==area$ID[j])
bb$sla[i]<-area$sla[j]
}
bb$dvr<-as.numeric(bb$dvr)
bb$dvr<-ifelse(is.na(bb$dvr), 0, bb$dvr)
bb$dvr.avg<-ave(bb$dvr, bb$individ)
sla.mod<-lm(sla~tx+dvr.avg, data=bb)
display(sla.mod)
sla.mod2<-lm(sla~tx+dvr.avg+tx*dvr.avg, data=bb)
display(sla.mod2)
qplot(species, sla, data = bb,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("SLA")
r_sq<-1-((.2^2)/0.55)
r_sq<-1-((.55^2)/(0.2^2)
r_sq<-1-((.55^2)/(0.2^2))
r_sq<-1-((.55^2)/(0.2^2))
r_sq
r_sq<-1-((1.73^2)/(.2^2))
r_sq
r_sq<-1-((0.055^2)/(.2^2))
r_sq
log(10) - (2*log(50))
r_sq<-1-((0.05^2)/(.2^2))
r_sq
setwd("~/Documents/git/freezingexperiment/analyses")
#### Let's add in the other individuals now...
budspp<-read.csv("output/birches_speciesdata.csv", header=TRUE)
whole<-read.csv("input/bbch_data.csv", header=TRUE)
to.keep<-read.csv("..//planting/freezing_planting.csv", header=TRUE)
bb<-budspp[!is.na(budspp$dvr),]
bb$avg.rate<-ave(bb$dvr, bb$individ)
bb<-dplyr::select(bb, individ, species, budburst, leafout, frz, tx, avg.rate)
bb$bb<-ave(bb$budburst, bb$individ)
bb$lo<-ave(bb$leafout, bb$individ)
bb<-dplyr::select(bb, -budburst, -leafout)
bb<-bb[!duplicated(bb),]
# Start of Experiment was: 24 March 2017
start<-yday("2017/03/24")
bb$frz<-bb$frz-start
bb$dvr<-bb$lo-bb$bb
###### Time to clean buds experiment...
dx<-gather(whole, key=doy, value=bbch, -NEW, -TX)
keep<-unique(to.keep$id[to.keep$exp=="whole"])
dx<-filter(dx, NEW%in%keep)
dx$day<-substr(dx$doy, 2, 3)
dx$month<-substr(dx$doy, 5, 6)
dx$year<-substr(dx$doy, 8,11)
x<-paste(dx$year, dx$day, dx$month)
dx$date<-as.Date(strptime(x, format="%Y %d %m"))
dx$doy<-yday(dx$date)
start<-yday("2017/02/09")
dx$doy.adjusted<-dx$doy-start
dx<-dx[!is.na(dx$bbch),]
dx<-dx%>%dplyr::select(NEW, doy.adjusted, bbch)
last<-aggregate(dx$doy.adjusted, by = list(dx$NEW), max)
last<-last%>%rename(individ=Group.1)%>%rename(doy.adjusted=x)
last$leaf<-NA
for(i in c(1:nrow(last))) {
for(j in c(1:nrow(dx)))
if(last$individ[i]==dx$NEW[j] & last$doy.adjusted[i]==dx$doy.adjusted[j])
last$leaf[i]<-dx$bbch[j]
}
first<-aggregate(dx$doy.adjusted, by = list(dx$NEW), min)
first<-first%>%rename(individ=Group.1)%>%rename(doy.adjusted=x)
first$bb<-NA
for(i in c(1:nrow(first))) {
for(j in c(1:nrow(dx)))
if(first$individ[i]==dx$NEW[j] & first$doy.adjusted[i]==dx$doy.adjusted[j])
first$bb[i]<-dx$bbch[j]
}
first<-first%>%rename(budburst=doy.adjusted)%>%rename(bbch.first=bb)
last<-last%>%rename(leafout=doy.adjusted)%>%rename(bbch.last=leaf)
risk<-full_join(first, last)
risk$tx<-NA
for(i in c(1:nrow(risk))){
for(j in c(i:nrow(whole)))
if(risk$individ[i]==whole$NEW[j])
risk$tx[i]<-whole$TX[j]
}
### Issues with loop... will fix last three by hand
bad<-risk[is.na(risk$tx),]
risk$tx<-ifelse(risk$individ=="ACEPEN_W07", "A", risk$tx)
risk$tx<-ifelse(risk$individ=="ACEPEN_W12", "A", risk$tx)
risk$tx<-ifelse(risk$individ=="ACEPEN_W13", "A", risk$tx)
risk$dvr<-risk$leafout-risk$budburst
risk<-risk%>%
rename(bb=budburst)%>%
rename(lo=leafout)%>%
dplyr::select(-bbch.first, -bbch.last)
risk$species<-substr(risk$individ, 1, 6)
risk$site<-substr(risk$individ, 8, 8)
risk$site<-ifelse(risk$site=="W", "WM", risk$site)
risk$site<-ifelse(risk$site=="G", "GR", risk$site)
risk$site<-ifelse(risk$site=="S", "SH", risk$site)
bb$site<-substr(bb$individ, 8, 8)
bb$site<-ifelse(bb$site=="W", "WM", bb$site)
bb$site<-ifelse(bb$site=="G", "GR", bb$site)
bb<-dplyr::select(bb, individ, species, tx, bb, lo, dvr, site)
risk<-dplyr::select(risk, individ, species, tx, bb, lo, dvr, site)
dvr<-rbind(risk, bb)
mod<-lm(dvr~tx+species, data=dvr)
display(mod)
mod1<-lmer(dvr~tx+(1|species), data=dvr)
display(mod1)
qplot(species, dvr, data = dvr,
geom = "boxplot", color=tx) +
xlab("Species")+ylab("Duration of Vegetative Risk")
#### Check site effect...
vib<-filter(dvr, species=="VIBCAS")
mod3<-lm(dvr~site+tx, data=vib)
display(mod3)
#write.csv(dvr, file=("~/Documents/git/freezingexperiment/analyses/output/whole_dvr.csv"), row.names = FALSE)
View(whole)
View(dvr)
length(dvr$species[dvr$species=="VIBCAS"])
length(dvr$species[dvr$species=="PRUPEN"])
